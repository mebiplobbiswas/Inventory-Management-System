@model Logistic_Inventory.Models.UseProductsInProject
@using Logistic_Inventory.Models

@{
    ViewBag.Title = "Create";
    HttpContext context = HttpContext.Current;
    string baseUrl = context.Request.Url.Authority + context.Request.ApplicationPath.TrimEnd('/');

    
        List<string> Quants = ViewData["quans"] as List<string>;
     


    int i = 0;

}
<script src="~/Scripts/select2/3.5/select2.min.js"></script>

<link href="~/Content/select2/3.5/select2.min.css" rel="stylesheet" />
 

<div class="row" id="section1">
    <div class="col-md-8 ml-auto mr-auto">
        <div class="card card-upgrade">

            <div class="card-body">
                <div class="card card-user">
                    <div class="card-body">
                        <p class="card-text">
                        </p><div class="author">
                            <div class="block block-one"></div>
                            <div class="block block-two"></div>
                            <div class="block block-three"></div>
                            <div class="block block-four"></div>
                            <a href="javascript:void(0)">

                                <h2 class="title">Use Products In Project</h2>
                            </a>
                            <p class="description">
                              Update Purchase Stock
                            </p>
                        </div>
                        <p></p>
                        <div class="card-description">


                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()

                            <div class="form-horizontal">

                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ProjectID, htmlAttributes: new { @class = "control-label col-md-6" })
                                    <div class="col-md-12">
                                        <select class="form-control" name="ProjectID" id="ProjectID">

                                            @if (ViewBag.flag)
                                            {
                                                <option value='@ViewBag.proId'>@ViewBag.proTitle </option>
                                            }
                                            @Html.ValidationMessageFor(model => model.ProjectID, "", new { @class = "text-danger" })

                                        </select>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.PurchasesId, htmlAttributes: new { @class = "control-label col-md-6" })
                                    <div class="col-md-12">
                                        <select class="form-control" name="PurchasesID" id="PurchasesID">
                                            @if (ViewBag.flag)
                                            {
                                                <option value='@ViewBag.purId'>@ViewBag.purTitle </option>
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div style="background-color:aliceblue;padding:5px">
                                    <h3 style="text-align:center">Set Stock Used In Project</h3>

                                    @if (ViewBag.totalProduct > 1)
                                    {

                                        if (ViewBag.flag)
                                        {
                                            foreach (var item in ViewData["products"] as List<Products>)
                                            {
                                                var ids = "pro" + i;
                                                <div class="form-group">
                                                    <label class="control-label col-md-12" style="font-size:16px"><b>@item.ProductName (Product Code: @item.ProductCode) </b> </label>
                                                    <div class="col-md-12">
                                                        <input type="number" value="@Quants.ElementAt(i)" id="@ids" class="form-control" />

                                                    </div>
                                                </div>
                                                i++;
                                            }
                                        }

                                    }
                                    else
                                    {
                                        <div class="form-group">
                                            <label class="control-label col-md-12" style="font-size:16px"><b>@ViewBag.pname  (Product Code: @ViewBag.pcode ) </b> </label>
                                            <div class="col-md-12">
                                                <input type="number" value="@Convert.ToInt32(ViewBag.q)" id="pro" class="form-control" />

                                            </div>
                                        </div>
                                    }
                                </div>                          
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-6" })
                                    <div class="col-md-12">
                                        @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <br />
                                <div class="form-group">
                                    <div class="col-md-12">
                                        <button class="btn btn-default btn-block" type="submit"> Update </button>

                                    </div>

                                </div>
                            </div>


                            <input type="hidden" name="invoice" id="invoice" value="@ViewBag.invoice" />
                            <input type="hidden" name="StocksUsedList" id="StocksUsedList" />
                            <input type="hidden" name="ProductCount" value="@ViewBag.pCount" />
                            }

                        </div>

                            <div class="card-footer">

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


<style>    .form-control {
max-width:750px;
    }
</style>
    <div class="row" id="section2">
        <div class="col-md-8 ml-auto mr-auto">
            <div class="card card-upgrade">

                <div class="card-body">
                    <div class="card card-user">
                        <div class="card-body">
                            <p class="card-text">
                            </p><div class="author">
                                <div class="block block-one"></div>
                                <div class="block block-two"></div>
                                <div class="block block-three"></div>
                                <div class="block block-four"></div>
                                <a href="javascript:void(0)">

                                    <h2 class="title">Use Products In Project</h2>
                                </a>
                                <p class="description">
                                    Specify Project & Purchase
                                </p>
                            </div>
                            <p></p>
                            <div class="card-description">



                                <form action="/UseProductsInProject/Create" method="get">
                                    <div class="form-group">




                                        <div class="form-group">
                                            <div class="col-md-12">
                                                <select class="form-control" style="max-width:700px" name="pid" id="ProjectID2">
                                                    <option selected value=""> Select A Project </option>
                                                    @foreach (var item in ViewData["ProjectID"] as List<Projects>)
                                                    {

                                                        <option value="@item.id">@item.ProjectName</option>
                                                    }
                                                    @Html.ValidationMessageFor(model => model.ProjectID, "", new { @class = "text-danger" })

                                                </select>
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="col-md-12">
                                                <select required style="max-width:700px" class="form-control" name="sid" id="PurchasesID2"></select>
                                            </div>
                                        </div>

                                        <input type="hidden" name="ProjectTitle" id="ProjectTitle" />
                                        <input type="hidden" name="PurchaseTitle" id="PurchaseTitle" />

                                        <br />
                                        <div class="form-group">
                                            <div class="col-md-12">
                                                <button class="btn btn-default btn-block" type="submit"> Proceed </button>

                                            </div>

                                        </div>

                                </form>

                            </div>

                            <div class="card-footer">

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    <script>


        var invoice = $("#invoice").val();

        var quantityList = new Array();
        var quantityChangedList = new Array();

          $('#ProjectID').select2({ width: '630px' });

          $('#ProjectID').on('change', function () {


        var v = this.value;
        var link = "/UseProductsInProject/getpurchase/" + v;

        if (v == "") {
            $('#PurchasesID').empty().trigger("change");
        }
        console.log(v);

        $.ajax({
            type: "POST",
            url: link,
            dataType: "json",

            success: function (data) {

                $('#PurchasesID').empty().trigger("change");
                //$('#PurchasesID').select2('data', null)
                var k = 1;
                $.each(data, function (i, d) {
                    // You will need to alter the below to get the right values from your json object.  Guessing that d.id / d.modelName are columns in your carModels data
                    $('#PurchasesID').append('<option value="' + d['id'] + '">' + d['text'] + '</option>');


                    $('#PurchasesID').select2({ width: '630px' });

                });
            }
        });

    });











    $('#ProjectID2').select2({ width: '630px' });

        var pro = $("#ProjectID2 option:selected").text();
        $("#PurchaseTitle").val(pro);


        $("#PurchasesID2").on('change', function () {

          
            var pro = $("#PurchasesID2 option:selected").text();
            //alert(pro);
            $("#PurchaseTitle").val(pro);
        });


    $('#ProjectID2').on('change', function () {

        var v = this.value;
        var link = "/UseProductsInProject/getpurchase/" + v;

        if (v == "") {
            $('#PurchasesID2').empty().trigger("change");
        }
        console.log(v);


   



        $.ajax({
            type: "POST",
            url: link,
            dataType: "json",

            success: function (data) {

                $('#PurchasesID2').empty().trigger("change");
                //$('#PurchasesID').select2('data', null)
                var k = 1;
                $.each(data, function (i, d) {
                    // You will need to alter the below to get the right values from your json object.  Guessing that d.id / d.modelName are columns in your carModels data
                    $('#PurchasesID2').append('<option value="' + d['id'] + '">' + d['text'] + '</option>');


                    $('#PurchasesID2').select2({ width: '630px' });

                    var pro = $("#ProjectID2 option:selected").text();
                    var pur = $("#PurchasesID2 option:selected").text();



                    $("#ProjectTitle").val(pro);
                    $("#PurchaseTitle").val(pur);




                });
            }
        });

    });

       $("#section1").hide();
    @if(ViewBag.flag )
    {
        @:$("#section2").hide();
        @:$("#section1").show();




    }
    else
    {

        @:$("#section2").show();
        @:$("#section1").hide();

    }



               @if (ViewBag.flag)
               {
                   if(ViewBag.totalProduct>1)
                   {
                       i = 0;
                   foreach (var item in ViewData["products"] as List<Products>)
                   {
                       var ids = "#pro" + i.ToString();

                       var q = Quants.ElementAt(i);

                       @:var id = "@ids";
                       @:var qn = "@q";

                       @:$('@ids').on("change keyup keydown", function (e) {

                       @:if (parseInt(this.value) > parseInt(qn))
                           @:{
                                @:alert("You Cannot Use Stock More Than Total Stock ");
                                @:$('@ids').val(@q);
                                @:$('@ids').focus();
                           @:}
                       @:else
                       @:{
                                @:quantityChangedList[@i] = this.value;
                                  @:$("#StocksUsedList").val(quantityChangedList.toString());


                       @:}



                       @:});


                       @:quantityList.push(@Quants.ElementAt(i));
                         @:quantityChangedList.push(@Quants.ElementAt(i));
                       i++;


                       }
                   }
                   else
                   {
                       var ids = "#pro"  ;

                       var q = ViewBag.q;

                       @:var id = "@ids";
                       @:var qn = "@q";

                       @:quantityChangedList[0] = "@Convert.ToInt32(ViewBag.q)";

                       @:$('@ids').on("change keyup keydown", function (e) {

                       @:if (parseInt(this.value) > parseInt(qn))
                           @:{
                                @:alert("You Cannot Use Stock More Than Total Stock ");
                                @:$('@ids').val(@q);
                                @:$('@ids').focus();
                           @:}
                       @:else
                       @:{
                                @:quantityChangedList[0] = this.value;
                                  @:$("#StocksUsedList").val(quantityChangedList.toString());


                       @:}



                       @:});

 
                   }
               }



         console.log(invoice);
        console.log(quantityList);


        $("#StocksUsedList").val(quantityChangedList.toString());

    </script>

